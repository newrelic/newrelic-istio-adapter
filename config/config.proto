// Copyright 2019 New Relic Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

// $title: New Relic
// $description: An Istio Mixer adapter to send telemetry data to New Relic.
// $location: https://istio.io/docs/reference/config/policy-and-telemetry/adapters/newrelic.html
// $provider: New Relic, Inc.
// $source_link: https://github.com/newrelic/newrelic-istio-adapter
// $latest_release_link: https://github.com/newrelic/newrelic-istio-adapter/releases
// $supported_templates: metric, tracespan

// An Istio Mixer adapter to send telemetry data to New Relic.
package adapter.newrelic.config;

import "gogoproto/gogo.proto";

option go_package="config";

// Configuration format for the `newrelic` adapter.
message Params {
  // Optional. The namespace is used as a prefix for metric names in New Relic.
  // An example: for a metric named `requestSize` with a namespace of `istio`,
  // the full metric name in New Relic becomes `istio.requestSize`.
  string namespace = 1;

  // Describes how to represent an Istio metric instance in New Relic.
  message MetricInfo {
    // Recommended. The name of the metric (scoped by namespaces) in New Relic.
    //
    // The name must not be empty and the fully qualified name (prefixed
    // with the namespace) must contain 255 16-bit code units (UTF-16) or
    // less. Otherwise, an error will be logged and no metric will be sent
    // to New Relic.
    string name = 1;

    // New Relic Metric types.
    enum Type {
      // Default and invalid unspecified type.
      //
      // An error will be logged and the metric dropped if unspecified.
      UNSPECIFIED = 0;

      // A New Relic `Gauge` type.
      //
      // This metric type represents the instantaneous state of something
      // or process that can both increase and decrease in value.
      //
      // For example, this metric type would be used to record:
      //
      //  * the network throughput of a service
      //  * the storage capacity used on a server
      //  * the size of a queue
      GAUGE = 1;

      // A New Relic `Count` type.
      //
      // This metric type represents the number of occurrences for an event
      // within a time window. It is important to note that this is not the
      // cumulative tally of occurrences since the beginning of
      // measurements. Rather, this metric type represents the change in the
      // cumulative tally of events within a time window.
      //
      // For example, this metric type would be used to record:
      //
      //  * the number of requests to a service
      //  * the number of tasks submitted to a processor
      //  * the number of errors produced
      COUNT = 2;

      // New Relic `Summary` type.
      //
      // This metric type reports aggregated information about discrete
      // events. The information is recorded as a count of events, average
      // event values, sum of event values, and the minimum and maximum
      // event values observed within a time window.
      //
      // For example, this metric type would be used to record:
      //
      //  * the duration and count of requests to service
      //  * the duration and count of database transactions
      //  * the time each message spent in a queue
      SUMMARY = 3;
    }
    // Required. New Relic metric type to interpret the Istio instance as.
    Type type = 2;
  }

  // Map of Istio metric instance names and the corresponding New Relic
  // MetricInfo specification. This identifies what to send New Relic and
  // in what form it should be sent.
  //
  // Any metric instances Istio sends to the adapter but not specified here
  // will be dropped and not exported to New Relic.
  map<string, MetricInfo> metrics = 2;
}
